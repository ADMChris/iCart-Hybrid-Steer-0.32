<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>WriteFB(CSWrite,CONCAT('02\',SupervisorIP),20,CONCAT('Cart[',INT_TO_STRING(WORD_TO_INT(HMICartNumber)),'].In'),1,ToSupervisor,CSDone,CSBusy,CSError,CSErrorID,CSErrorIDEX);&#xD;
&#xD;
CASE CommState OF &#xD;
	CS_Idle:&#xD;
		// Async Write to Supervisor IF&#xD;
		// Status Changed&#xD;
		IF AddDelimiter(ToSupervisor.Status,_COMMA) &lt;&gt; AddDelimiter(PrevToSupervisor.Status,_COMMA)&#xD;
		// Last Tag Changed&#xD;
		OR AddDelimiter(ToSupervisor.LastTag,_COMMA) &lt;&gt; AddDelimiter(PrevToSupervisor.LastTag,_COMMA) &#xD;
		// Last Station Changed&#xD;
		OR ToSupervisor.LastStation &lt;&gt; PrevToSupervisor.LastStation&#xD;
		// Position Changed&#xD;
		OR ToSupervisor.Position &lt;&gt; PrevToSupervisor.Position &#xD;
		// Ignore changes in speed &amp; battery level&#xD;
		THEN&#xD;
				CommState := CS_RequestWrite;&#xD;
		END_IF;&#xD;
&#xD;
	CS_RequestWrite:&#xD;
		CSWrite:= TRUE;&#xD;
		CommState := CS_WriteBusy;&#xD;
	CS_WriteBusy:&#xD;
		IF CSDone THEN CommState := CS_WriteDone; END_IF;&#xD;
		IF CSError THEN CommState := CS_WriteError; END_IF;&#xD;
	&#xD;
	CS_WriteDone:&#xD;
		CSWrite:=FALSE;&#xD;
		CommState := CS_Idle;&#xD;
		&#xD;
	CS_WriteError:&#xD;
		CSWrite := FALSE;&#xD;
		CommState := CS_Idle;&#xD;
	&#xD;
END_CASE;&#xD;
&#xD;
// Update diff if data written from supervisor or data written to supervisor&#xD;
IF PrevSIDIn &lt;&gt; FromSupervisor.SID OR CommState = CS_WriteDone THEN&#xD;
	PrevToSupervisor := ToSupervisor;&#xD;
	LastComms := GetTime();&#xD;
END_IF;&#xD;
&#xD;
LastUpdSec := DtToSec(LastComms);&#xD;
CurrentSec := DtToSec(GetTime());&#xD;
&#xD;
SupervisorOK := LastUpdSec &gt; CurrentSec - 15;&#xD;
&#xD;
PrevSIDIn := FromSupervisor.SID;</Text></StructuredTextModel>