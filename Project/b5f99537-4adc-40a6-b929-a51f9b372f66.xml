<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>(* Add in bool state during moving which will inhibit drive fwd and rev states fro drives 1 and 2 and insert this into a seperate rung when active.&#xD;
Both Drives should spin fwd to spin on the spot. Tag request should also set the speed and accel rate. &#xD;
Timer of 1s to be added into spin state when sensor count is &gt;=5 then should center the azd upon completion &#xD;
When Spinstate is complete the controller should give control back to do tracking. Look at placing a bool function in do tracking to activate after spinstate.&#xD;
Should be a time out during spin state.&#xD;
both torque limits should either be removed or the same value.&#xD;
azd drive should go to a position at a certian velocity when doing spin state.&#xD;
Icart should not move until azd center is completed / look at placing bool at the end to enable agv runnining in stop start function. &#xD;
*)&#xD;
CASE SS OF&#xD;
	&#xD;
		SS_idle:&#xD;
// idle state. &#xD;
	IF TagRequestLS OR TagRequestRS THEN&#xD;
		PauseAGV :=  TRUE;&#xD;
		TagSpin := TRUE;&#xD;
		SS := SS_AZDSet;&#xD;
		&#xD;
	ELSE 	TagRequestLS :=FALSE;&#xD;
			TagRequestRS := FALSE;&#xD;
			TagSpin := FALSE;&#xD;
			SS:= SS_idle;&#xD;
	END_IF;&#xD;
		&#xD;
		SS_AZDSet:&#xD;
// set AZD drive position to Left. 	&#xD;
	IF (AZD_SW_OE AND PauseAGV = TRUE) AND LastTagrequest = TagRequestLS THEN&#xD;
		AZD_SetPos := -30000;&#xD;
		AZD_SetVel := 30000;&#xD;
		SS := SS_ReadyToSpin;&#xD;
	ELSE&#xD;
		AZD_SetPos := PrevSetPos;&#xD;
		AZD_SetVel := 20000;&#xD;
		&#xD;
	END_IF;&#xD;
&#xD;
//Set AZD Drive Pos to Right.&#xD;
		&#xD;
	IF (AZD_SW_OE AND PauseAGV = TRUE) AND LastTagrequest = TagRequestRS THEN&#xD;
		//set drives to 0 and position AZD_Stepper to RH Turn. &#xD;
		AZD_SetPos := 30000;&#xD;
		AZD_SetVel := 30000;&#xD;
		SS := SS_ReadyToSpin;&#xD;
	//if none of the above then set pos to previous pos and velocity to previous.	&#xD;
	ELSE&#xD;
		AZD_SetPos := PrevSetPos;&#xD;
		AZD_SetVel := 20000;&#xD;
		&#xD;
	END_IF;&#xD;
	&#xD;
// Tag Request begin to move AGV //&#xD;
//move using blv commands in drive control//&#xD;
// For spin right Drive 1 (LH) should REV nd Drive 2 (RH) should drive FWD&#xD;
// For spin Left Drive 1 (LH) should FWD nd Drive 2 (RH) should drive REV&#xD;
&#xD;
		SS_ReadyToSpin: &#xD;
	//if spin left is selected&#xD;
	IF (AZD_ActPos = -30000) THEN&#xD;
		&#xD;
		TagLeftPos := TRUE;// Set BLV Drives to turn in a left turn motion. &#xD;
		SpinAct := TRUE;&#xD;
		ReadyToSpin :=  TRUE;// Bool Func which indicates, ready to spin.&#xD;
		PauseAGV := FALSE; //set agv pause to false to enable blv drives.&#xD;
		&#xD;
		SS := SS_TapeDetect;&#xD;
	&#xD;
	END_IF;&#xD;
	&#xD;
	&#xD;
	IF (AZD_ActPos = 30000) THEN&#xD;
		&#xD;
		PauseAGV  := FALSE;&#xD;
		TagRightPos :=  TRUE; // Set BLV Drives to turn in a right turn motion. &#xD;
		SpinAct := TRUE; //set speed in drive control.&#xD;
		ReadyToSpin  :=TRUE;// Bool Function which indicates to speed control function that spin state is active and ready to spin. &#xD;
		&#xD;
		SS := SS_TapeDetect; &#xD;
	END_IF;&#xD;
	&#xD;
// Completion of Tag Request Spin&#xD;
&#xD;
		SS_TapeDetect:&#xD;
	//only complete if sensor bit count on tape sensor is &gt;=4 &#xD;
	IF G_SensorCount &gt;=4 THEN&#xD;
		&#xD;
		TapeFound := TRUE; // activate Bool and set off timer to pause agv.&#xD;
		AZD_SetPos := 0; // set azd pos back to 0.&#xD;
		SpinAct :=  FALSE; // disable spin speed. &#xD;
		TagLeftPos :=  FALSE; //set drive directions to false. &#xD;
		TagRightPos := FALSE;&#xD;
		&#xD;
		SS := SS_Complete;&#xD;
&#xD;
	END_IF;&#xD;
	&#xD;
		SS_Complete:&#xD;
		&#xD;
	IF (AZD_ActPos = 0) THEN&#xD;
		&#xD;
		SpinFinished := TRUE;&#xD;
		TapeFound := FALSE;&#xD;
		TagSpin := FALSE;&#xD;
		&#xD;
		SS := SS_idle; // return to idle state when complete.&#xD;
	END_IF;	&#xD;
		&#xD;
	&#xD;
// AGV stop durring Spin cycle due to either Scanner state or Estop.&#xD;
&#xD;
	&#xD;
(*&#xD;
	SS_Fault:&#xD;
	IF AZD_SW_Fault THEN&#xD;
	&#xD;
		AZD_InFault := TRUE;&#xD;
		StopAGV		:= TRUE;&#xD;
	&#xD;
	ELSE &#xD;
		AZD_SW_Fault := FALSE;&#xD;
		AZD_SetPos := PrevSetPos;&#xD;
	&#xD;
	END_IF;*)&#xD;
	&#xD;
	(*ELSE &#xD;
		AZD_InFault := FALSE;&#xD;
		StopAGV :=  FALSE;*) &#xD;
	&#xD;
END_CASE;&#xD;
&#xD;
	(*IF ScanWarnHigh OR PauseAGV THEN&#xD;
		TagRequestLS := LastTagrequest;&#xD;
		TagRequestRS := LastTagrequest;&#xD;
		&#xD;
	END_IF;*)&#xD;
	&#xD;
		&#xD;
	&#xD;
	&#xD;
		&#xD;
		</Text></StructuredTextModel>